{"ast":null,"code":"var _jsxFileName = \"/Users/antonlyzun/Desktop/GoIT/goit-react-hw-02-feedback/src/components/App.jsx\";\nimport React, { Component } from 'react';\nimport FeedbackOptions from './Feedback/FeedBack/Feedback';\nimport Section from './Feedback/Section/Section';\nimport Notifications from './Feedback/Notification/Notifications';\nimport Statistics from './Feedback/Statistics/Statistics';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    };\n\n    this.onLeaveFeedback = e => {\n      const name = e.target.name;\n      this.setState(prevState => ({\n        [name]: prevState[name] + 1\n      }));\n    };\n  }\n\n  countTotalFeedback() {\n    const {\n      good,\n      neutral,\n      bad\n    } = this.state;\n    const sum = good + neutral + bad;\n    return sum;\n  }\n\n  countPositiveFeedbackPercentage() {\n    const sum = this.countTotalFeedback();\n    const {\n      good\n    } = this.state;\n    const positiveFeedback = good * 100 / sum;\n    return Math.round(positiveFeedback);\n  }\n\n  render() {\n    const {\n      good,\n      neutral,\n      bad\n    } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage(); // const objKey = Object.keys(this.state);\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Section, {\n        title: \"Please leave feedback\",\n        children: /*#__PURE__*/_jsxDEV(FeedbackOptions, {\n          options: Object.keys(this.state),\n          onLeaveFeedback: this.onLeaveFeedback\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this), total === 0 ? /*#__PURE__*/_jsxDEV(Notifications, {\n        message: \"No feedback given\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(Section, {\n        title: \"Statistics\",\n        children: /*#__PURE__*/_jsxDEV(Statistics, {\n          good: good,\n          neutral: neutral,\n          bad: bad,\n          total: total,\n          positivePercentage: positivePercentage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/antonlyzun/Desktop/GoIT/goit-react-hw-02-feedback/src/components/App.jsx"],"names":["React","Component","FeedbackOptions","Section","Notifications","Statistics","App","state","good","neutral","bad","onLeaveFeedback","e","name","target","setState","prevState","countTotalFeedback","sum","countPositiveFeedbackPercentage","positiveFeedback","Math","round","render","total","positivePercentage","Object","keys"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,aAAP,MAA0B,uCAA1B;AACA,OAAOC,UAAP,MAAuB,kCAAvB;;;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BM,KAD0B,GAClB;AACNC,MAAAA,IAAI,EAAE,CADA;AAENC,MAAAA,OAAO,EAAE,CAFH;AAGNC,MAAAA,GAAG,EAAE;AAHC,KADkB;;AAAA,SAoB1BC,eApB0B,GAoBPC,CAAD,IAAO;AACzB,YAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASD,IAAtB;AACA,WAAKE,QAAL,CAAeC,SAAD,KAAgB;AAC7B,SAACH,IAAD,GAAQG,SAAS,CAACH,IAAD,CAAT,GAAkB;AADG,OAAhB,CAAd;AAGA,KAzB0B;AAAA;;AAO1BI,EAAAA,kBAAkB,GAAG;AACnB,UAAM;AAAET,MAAAA,IAAF;AAAQC,MAAAA,OAAR;AAAiBC,MAAAA;AAAjB,QAAyB,KAAKH,KAApC;AACA,UAAMW,GAAG,GAAGV,IAAI,GAAGC,OAAP,GAAiBC,GAA7B;AACA,WAAOQ,GAAP;AACD;;AAEDC,EAAAA,+BAA+B,GAAG;AAChC,UAAMD,GAAG,GAAG,KAAKD,kBAAL,EAAZ;AACA,UAAM;AAAET,MAAAA;AAAF,QAAW,KAAKD,KAAtB;AACA,UAAMa,gBAAgB,GAAIZ,IAAI,GAAG,GAAR,GAAeU,GAAxC;AACF,WAAOG,IAAI,CAACC,KAAL,CAAWF,gBAAX,CAAP;AACC;;AASDG,EAAAA,MAAM,GAAG;AACR,UAAM;AAAEf,MAAAA,IAAF;AAAQC,MAAAA,OAAR;AAAiBC,MAAAA;AAAjB,QAAyB,KAAKH,KAApC;AACD,UAAMiB,KAAK,GAAG,KAAKP,kBAAL,EAAd;AACA,UAAMQ,kBAAkB,GAAG,KAAKN,+BAAL,EAA3B,CAHS,CAKT;;AACE,wBACD;AAAA,8BACC,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,uBAAf;AAAA,+BACC,QAAC,eAAD;AAAiB,UAAA,OAAO,EAAEO,MAAM,CAACC,IAAP,CAAY,KAAKpB,KAAjB,CAA1B;AAAmD,UAAA,eAAe,EAAE,KAAKI;AAAzE;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cADD,EAKEa,KAAK,KAAK,CAAV,gBACA,QAAC,aAAD;AAAe,QAAA,OAAO,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,cADA,gBAGA,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,YAAf;AAAA,+BACC,QAAC,UAAD;AACC,UAAA,IAAI,EAAEhB,IADP;AAEC,UAAA,OAAO,EAAEC,OAFV;AAGC,UAAA,GAAG,EAAEC,GAHN;AAIC,UAAA,KAAK,EAAEc,KAJR;AAKC,UAAA,kBAAkB,EAAEC;AALrB;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cARF;AAAA,oBADC;AAqBD;;AAtDyB;;AAyD5B,eAAenB,GAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport FeedbackOptions from './Feedback/FeedBack/Feedback';\nimport Section from './Feedback/Section/Section';\nimport Notifications from './Feedback/Notification/Notifications';\nimport Statistics from './Feedback/Statistics/Statistics';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  }\n\n  countTotalFeedback() {\n    const { good, neutral, bad } = this.state;\n    const sum = good + neutral + bad;\n    return sum;\n  }\n\n  countPositiveFeedbackPercentage() {\n    const sum = this.countTotalFeedback();\n    const { good } = this.state;\n    const positiveFeedback = (good * 100) / sum;\n\t\treturn Math.round(positiveFeedback);\n  }\n\n  onLeaveFeedback = (e) => {\n\t\tconst name = e.target.name;\n\t\tthis.setState((prevState) => ({\n\t\t\t[name]: prevState[name] + 1\n\t\t}));\n\t};\n  \n  render() {\n  \tconst { good, neutral, bad } = this.state;\n\t\tconst total = this.countTotalFeedback();\n\t\tconst positivePercentage = this.countPositiveFeedbackPercentage();\n\n\t\t// const objKey = Object.keys(this.state);\n    return (\n\t\t\t<>\n\t\t\t\t<Section title=\"Please leave feedback\">\n\t\t\t\t\t<FeedbackOptions options={Object.keys(this.state)} onLeaveFeedback={this.onLeaveFeedback} />\n\t\t\t\t</Section>\n\n\t\t\t\t{total === 0 ? (\n\t\t\t\t\t<Notifications message=\"No feedback given\" />\n\t\t\t\t) : (\n\t\t\t\t\t<Section title=\"Statistics\">\n\t\t\t\t\t\t<Statistics\n\t\t\t\t\t\t\tgood={good}\n\t\t\t\t\t\t\tneutral={neutral}\n\t\t\t\t\t\t\tbad={bad}\n\t\t\t\t\t\t\ttotal={total}\n\t\t\t\t\t\t\tpositivePercentage={positivePercentage}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Section>\n\t\t\t\t)}\n\t\t\t</>\n\t\t);\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}