{"ast":null,"code":"var _jsxFileName = \"/Users/antonlyzun/Desktop/GoIT/goit-react-hw-04-feedback/src/components/App.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport FeedBackOptions from './FeedBack/FeedBackOptions';\nimport Section from './Section/Section';\nimport Statistic from './Statistics/Statistic';\nimport Nostat from './Notify/Notify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const onLeaveFeedback = e => {\n    const count = e.target.name;\n\n    if (count === 'good') {\n      return setGood(p => p + 1);\n    }\n\n    ;\n\n    if (count === 'neutral') {\n      return setNeutral(p => p + 1);\n    }\n\n    ;\n\n    if (count === 'bad') {\n      return setBad(p => p + 1);\n    }\n\n    ;\n  };\n\n  const totalCount = () => {\n    // const { Good, Neutral, Bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  const positivePercent = () => {\n    // const { Good, Bad, Neutral } = this.state\n    let positivePercent = 0;\n    const finalPositivePercentage = Math.floor(good / (bad + neutral + good) * 100);\n\n    if (finalPositivePercentage > 0) {\n      positivePercent = finalPositivePercentage;\n    }\n\n    return positivePercent;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Section, {\n      title: \"Please leave feedback\",\n      children: [/*#__PURE__*/_jsxDEV(FeedBackOptions, {\n        options: Object.keys({\n          good,\n          neutral,\n          bad\n        }),\n        onLeaveFeedback: onLeaveFeedback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), totalCount() === 0 ? /*#__PURE__*/_jsxDEV(Nostat, {\n        text: \"No feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Statistic, {\n        text: \"Statistics\",\n        Good: good,\n        Neutral: neutral,\n        Bad: bad,\n        total: totalCount(),\n        positivePercent: positivePercent()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false); // }\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/antonlyzun/Desktop/GoIT/goit-react-hw-04-feedback/src/components/App.jsx"],"names":["useState","FeedBackOptions","Section","Statistic","Nostat","App","good","setGood","neutral","setNeutral","bad","setBad","onLeaveFeedback","e","count","target","name","p","totalCount","positivePercent","finalPositivePercentage","Math","floor","Object","keys"],"mappings":";;;AAAA,SAASA,QAAT,QAAwB,OAAxB;AACA,OAAOC,eAAP,MAA4B,4BAA5B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;;AAEA,OAAO,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACU,GAAD,EAAMC,MAAN,IAAgBX,QAAQ,CAAC,CAAD,CAA9B;;AAEE,QAAMY,eAAe,GAAIC,CAAD,IAAO;AAC7B,UAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASC,IAAvB;;AACA,QAAIF,KAAK,KAAK,MAAd,EAAsB;AACpB,aAAOP,OAAO,CAACU,CAAC,IAAIA,CAAC,GAAG,CAAV,CAAd;AACD;;AAAA;;AAED,QAAIH,KAAK,KAAK,SAAd,EAAyB;AACvB,aAAOL,UAAU,CAACQ,CAAC,IAAIA,CAAC,GAAG,CAAV,CAAjB;AACD;;AAAA;;AAED,QAAIH,KAAK,KAAK,KAAd,EAAqB;AACnB,aAAOH,MAAM,CAACM,CAAC,IAAIA,CAAC,GAAG,CAAV,CAAb;AACD;;AAAA;AACJ,GAbC;;AAcF,QAAMC,UAAU,GAAG,MAAM;AACvB;AACA,WAAOZ,IAAI,GAAGE,OAAP,GAAiBE,GAAxB;AACD,GAHD;;AAIA,QAAMS,eAAe,GAAG,MAAM;AAC5B;AACA,QAAIA,eAAe,GAAG,CAAtB;AACA,UAAMC,uBAAuB,GAAGC,IAAI,CAACC,KAAL,CAAYhB,IAAI,IAAII,GAAG,GAAGF,OAAN,GAAgBF,IAApB,CAAL,GAAkC,GAA7C,CAAhC;;AACA,QAAIc,uBAAuB,GAAG,CAA9B,EAAiC;AAC/BD,MAAAA,eAAe,GAAGC,uBAAlB;AACD;;AACD,WAAOD,eAAP;AACD,GARD;;AAUE,sBACD;AAAA,2BACK,QAAC,OAAD;AAAS,MAAA,KAAK,EAAC,uBAAf;AAAA,8BACE,QAAC,eAAD;AAAiB,QAAA,OAAO,EAAEI,MAAM,CAACC,IAAP,CAAY;AAAClB,UAAAA,IAAD;AAAOE,UAAAA,OAAP;AAAgBE,UAAAA;AAAhB,SAAZ,CAA1B;AAA6D,QAAA,eAAe,EAAEE;AAA9E;AAAA;AAAA;AAAA;AAAA,cADF,EAEIM,UAAU,OAAO,CAAjB,gBACA,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cADA,gBAEE,QAAC,SAAD;AACF,QAAA,IAAI,EAAC,YADH;AAEF,QAAA,IAAI,EAAEZ,IAFJ;AAGF,QAAA,OAAO,EAAEE,OAHP;AAIF,QAAA,GAAG,EAAEE,GAJH;AAKF,QAAA,KAAK,EAAEQ,UAAU,EALf;AAMF,QAAA,eAAe,EAAEC,eAAe;AAN9B;AAAA;AAAA;AAAA;AAAA,cAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AADL,mBADC,CAjCqB,CAmDvB;AAED,CArDM;;GAAMd,G;;KAAAA,G","sourcesContent":["import { useState} from 'react';\nimport FeedBackOptions from './FeedBack/FeedBackOptions';\nimport Section from './Section/Section'\nimport Statistic from './Statistics/Statistic';\nimport Nostat from './Notify/Notify';\n\nexport const App = () => {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n    const onLeaveFeedback = (e) => {\n      const count = e.target.name;\n      if (count === 'good') {\n        return setGood(p => p + 1);\n      };\n\n      if (count === 'neutral') {\n        return setNeutral(p => p + 1);\n      };\n\n      if (count === 'bad') {\n        return setBad(p => p + 1);\n      };\n  };\n  const totalCount = () => {\n    // const { Good, Neutral, Bad } = this.state;\n    return good + neutral + bad;\n  };\n  const positivePercent = () => {\n    // const { Good, Bad, Neutral } = this.state\n    let positivePercent = 0\n    const finalPositivePercentage = Math.floor((good / (bad + neutral + good)) * 100)\n    if (finalPositivePercentage > 0) {\n      positivePercent = finalPositivePercentage\n    }\n    return positivePercent;\n  };\n    \n    return (\n\t\t\t<>\n        <Section title=\"Please leave feedback\">\n          <FeedBackOptions options={Object.keys({good, neutral, bad})} onLeaveFeedback={onLeaveFeedback} />\n          { totalCount() === 0 ? (\n            <Nostat text=\"No feedback\"/>\n          ) : <Statistic\n            text=\"Statistics\"\n            Good={good}\n            Neutral={neutral}\n            Bad={bad}\n            total={totalCount()}\n            positivePercent={positivePercent()}\n          />\n          }\n          </Section>\n\t\t\t</>\n\t\t);\n  // }\n\n}\n"]},"metadata":{},"sourceType":"module"}