{"ast":null,"code":"var _jsxFileName = \"/Users/antonlyzun/Desktop/GoIT/goit-react-hw-02-feedback/src/components/Statistics/Statistic.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport css from './Statistic.module.css';\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Statistic = _ref => {\n  let {\n    good,\n    neutral,\n    bad,\n    total,\n    positivePercent,\n    text\n  } = _ref;\n  return (\n    /*#__PURE__*/\n    // <section className={ css.section }>\n    // </section>\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: css.feedback_item,\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: css.feedback_item,\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: css.feedback_item,\n          children: [\" Good: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: good\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 77\n          }, this)]\n        }, nanoid(), true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: css.feedback_item,\n          children: [\" Neutral: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: neutral\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 80\n          }, this)]\n        }, nanoid(), true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: css.feedback_item,\n          children: [\" Bad: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: bad\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 76\n          }, this)]\n        }, nanoid(), true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: css.feedback_item,\n          children: [\" Total: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: total\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 78\n          }, this)]\n        }, nanoid(), true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: css.feedback_item,\n          children: [\" PositivePercent: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [positivePercent, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 88\n          }, this)]\n        }, nanoid(), true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }, this)]\n      }, nanoid(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  );\n};\n\n_c = Statistic;\nStatistic.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePersent: PropTypes.number.isRequired\n};\nexport default Statistic;\n\nvar _c;\n\n$RefreshReg$(_c, \"Statistic\");","map":{"version":3,"sources":["/Users/antonlyzun/Desktop/GoIT/goit-react-hw-02-feedback/src/components/Statistics/Statistic.js"],"names":["React","PropTypes","css","nanoid","Statistic","good","neutral","bad","total","positivePercent","text","feedback_item","propTypes","number","isRequired","positivePersent"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,GAAP,MAAgB,wBAAhB;AACA,SAASC,MAAT,QAAuB,QAAvB;;;;AAGA,MAAMC,SAAS,GAAG,QAA0D;AAAA,MAAzD;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA,GAAjB;AAAsBC,IAAAA,KAAtB;AAA6BC,IAAAA,eAA7B;AAA8CC,IAAAA;AAA9C,GAAyD;AAExE;AAAA;AACI;AACA;AACA;AAAA,8BACI;AAAI,QAAA,SAAS,EAAGR,GAAG,CAACS,aAApB;AAAA,kBAAsCD;AAAtC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAI,QAAA,SAAS,EAAGR,GAAG,CAACS,aAApB;AAAA,gCACI;AAAI,UAAA,SAAS,EAAGT,GAAG,CAACS,aAApB;AAAA,6CAA4D;AAAA,sBAAON;AAAP;AAAA;AAAA;AAAA;AAAA,kBAA5D;AAAA,WAA0CF,MAAM,EAAhD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAI,UAAA,SAAS,EAAGD,GAAG,CAACS,aAApB;AAAA,gDAA+D;AAAA,sBAAOL;AAAP;AAAA;AAAA;AAAA;AAAA,kBAA/D;AAAA,WAA0CH,MAAM,EAAhD;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAI,UAAA,SAAS,EAAGD,GAAG,CAACS,aAApB;AAAA,4CAA2D;AAAA,sBAAOJ;AAAP;AAAA;AAAA;AAAA;AAAA,kBAA3D;AAAA,WAA0CJ,MAAM,EAAhD;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAI,UAAA,SAAS,EAAGD,GAAG,CAACS,aAApB;AAAA,8CAA6D;AAAA,sBAAOH;AAAP;AAAA;AAAA;AAAA;AAAA,kBAA7D;AAAA,WAA0CL,MAAM,EAAhD;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAI,UAAA,SAAS,EAAGD,GAAG,CAACS,aAApB;AAAA,wDAAuE;AAAA,uBAAOF,eAAP;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAvE;AAAA,WAA0CN,MAAM,EAAhD;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA,SAA0CA,MAAM,EAAhD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAHJ;AAcH,CAhBD;;KAAMC,S;AAkBNA,SAAS,CAACQ,SAAV,GAAsB;AAClBP,EAAAA,IAAI,EAAEJ,SAAS,CAACY,MAAV,CAAiBC,UADL;AAElBR,EAAAA,OAAO,EAAEL,SAAS,CAACY,MAAV,CAAiBC,UAFR;AAGlBP,EAAAA,GAAG,EAAEN,SAAS,CAACY,MAAV,CAAiBC,UAHJ;AAIlBN,EAAAA,KAAK,EAAEP,SAAS,CAACY,MAAV,CAAiBC,UAJN;AAKlBC,EAAAA,eAAe,EAAEd,SAAS,CAACY,MAAV,CAAiBC;AALhB,CAAtB;AAQA,eAAeV,SAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\"\nimport css from './Statistic.module.css'\nimport { nanoid } from \"nanoid\";\n\n\nconst Statistic = ({ good, neutral, bad, total, positivePercent, text }) => {\n\n    return (\n        // <section className={ css.section }>\n        // </section>\n        <>\n            <h2 className={ css.feedback_item }>{ text }</h2>\n            <ul className={ css.feedback_item } key={ nanoid() }>\n                <li className={ css.feedback_item } key={ nanoid() }> Good: <span>{good}</span></li>\n                <li className={ css.feedback_item } key={ nanoid() }> Neutral: <span>{neutral}</span></li>\n                <li className={ css.feedback_item } key={ nanoid() }> Bad: <span>{bad}</span></li>\n                <li className={ css.feedback_item } key={ nanoid() }> Total: <span>{total}</span></li>\n                <li className={ css.feedback_item } key={ nanoid() }> PositivePercent: <span>{positivePercent}%</span></li>\n            </ul>\n        </>\n    )\n}\n\nStatistic.propTypes = {\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n    total: PropTypes.number.isRequired,\n    positivePersent: PropTypes.number.isRequired\n}\n\nexport default Statistic;"]},"metadata":{},"sourceType":"module"}