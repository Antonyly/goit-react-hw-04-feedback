{"ast":null,"code":"var _jsxFileName = \"/Users/antonlyzun/Desktop/GoIT/goit-react-hw-02-feedback/src/components/Statistics/Statistic.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport css from './Statistic.module.css';\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Statistic = _ref => {\n  let {\n    Good,\n    Neutral,\n    Bad,\n    total,\n    positivePercent,\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: css.feedback_item,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: css.feedback_item,\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: css.feedback_item,\n        children: [\" Good: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: Good\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 77\n        }, this)]\n      }, nanoid(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: css.feedback_item,\n        children: [\" Neutral: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: Neutral\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 80\n        }, this)]\n      }, nanoid(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: css.feedback_item,\n        children: [\" Bad: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: Bad\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 76\n        }, this)]\n      }, nanoid(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: css.feedback_item,\n        children: [\" Total: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: total\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 78\n        }, this)]\n      }, nanoid(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: css.feedback_item,\n        children: [\" Positive feedback: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [positivePercent, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 90\n        }, this)]\n      }, nanoid(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)]\n    }, nanoid(), true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Statistic;\nStatistic.propTypes = {\n  Good: PropTypes.number.isRequired,\n  Neutral: PropTypes.number.isRequired,\n  Bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercent: PropTypes.number.isRequired\n};\nexport default Statistic;\n\nvar _c;\n\n$RefreshReg$(_c, \"Statistic\");","map":{"version":3,"sources":["/Users/antonlyzun/Desktop/GoIT/goit-react-hw-02-feedback/src/components/Statistics/Statistic.js"],"names":["React","PropTypes","css","nanoid","Statistic","Good","Neutral","Bad","total","positivePercent","text","feedback_item","propTypes","number","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,GAAP,MAAgB,wBAAhB;AACA,SAASC,MAAT,QAAuB,QAAvB;;;;AAGA,MAAMC,SAAS,GAAG,QAA0D;AAAA,MAAzD;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA,GAAjB;AAAsBC,IAAAA,KAAtB;AAA6BC,IAAAA,eAA7B;AAA8CC,IAAAA;AAA9C,GAAyD;AAExE,sBACI;AAAA,4BACI;AAAI,MAAA,SAAS,EAAGR,GAAG,CAACS,aAApB;AAAA,gBAAsCD;AAAtC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAI,MAAA,SAAS,EAAGR,GAAG,CAACS,aAApB;AAAA,8BACI;AAAI,QAAA,SAAS,EAAGT,GAAG,CAACS,aAApB;AAAA,2CAA4D;AAAA,oBAAON;AAAP;AAAA;AAAA;AAAA;AAAA,gBAA5D;AAAA,SAA0CF,MAAM,EAAhD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAI,QAAA,SAAS,EAAGD,GAAG,CAACS,aAApB;AAAA,8CAA+D;AAAA,oBAAOL;AAAP;AAAA;AAAA;AAAA;AAAA,gBAA/D;AAAA,SAA0CH,MAAM,EAAhD;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAI,QAAA,SAAS,EAAGD,GAAG,CAACS,aAApB;AAAA,0CAA2D;AAAA,oBAAOJ;AAAP;AAAA;AAAA;AAAA;AAAA,gBAA3D;AAAA,SAA0CJ,MAAM,EAAhD;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAI,QAAA,SAAS,EAAGD,GAAG,CAACS,aAApB;AAAA,4CAA6D;AAAA,oBAAOH;AAAP;AAAA;AAAA;AAAA;AAAA,gBAA7D;AAAA,SAA0CL,MAAM,EAAhD;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAI,QAAA,SAAS,EAAGD,GAAG,CAACS,aAApB;AAAA,wDAAyE;AAAA,qBAAOF,eAAP;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAzE;AAAA,SAA0CN,MAAM,EAAhD;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA,OAA0CA,MAAM,EAAhD;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAYH,CAdD;;KAAMC,S;AAgBNA,SAAS,CAACQ,SAAV,GAAsB;AAClBP,EAAAA,IAAI,EAAEJ,SAAS,CAACY,MAAV,CAAiBC,UADL;AAElBR,EAAAA,OAAO,EAAEL,SAAS,CAACY,MAAV,CAAiBC,UAFR;AAGlBP,EAAAA,GAAG,EAAEN,SAAS,CAACY,MAAV,CAAiBC,UAHJ;AAIlBN,EAAAA,KAAK,EAAEP,SAAS,CAACY,MAAV,CAAiBC,UAJN;AAKlBL,EAAAA,eAAe,EAAER,SAAS,CAACY,MAAV,CAAiBC;AALhB,CAAtB;AAQA,eAAeV,SAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\"\nimport css from './Statistic.module.css'\nimport { nanoid } from \"nanoid\";\n\n\nconst Statistic = ({ Good, Neutral, Bad, total, positivePercent, text }) => {\n\n    return (\n        <>\n            <h2 className={ css.feedback_item }>{ text }</h2>\n            <ul className={ css.feedback_item } key={ nanoid() }>\n                <li className={ css.feedback_item } key={ nanoid() }> Good: <span>{Good}</span></li>\n                <li className={ css.feedback_item } key={ nanoid() }> Neutral: <span>{Neutral}</span></li>\n                <li className={ css.feedback_item } key={ nanoid() }> Bad: <span>{Bad}</span></li>\n                <li className={ css.feedback_item } key={ nanoid() }> Total: <span>{total}</span></li>\n                <li className={ css.feedback_item } key={ nanoid() }> Positive feedback: <span>{positivePercent}%</span></li>\n            </ul>\n        </>\n    )\n}\n\nStatistic.propTypes = {\n    Good: PropTypes.number.isRequired,\n    Neutral: PropTypes.number.isRequired,\n    Bad: PropTypes.number.isRequired,\n    total: PropTypes.number.isRequired,\n    positivePercent: PropTypes.number.isRequired\n}\n\nexport default Statistic;"]},"metadata":{},"sourceType":"module"}