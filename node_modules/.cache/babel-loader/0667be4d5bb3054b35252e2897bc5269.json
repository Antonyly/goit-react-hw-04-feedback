{"ast":null,"code":"var _jsxFileName = \"/Users/antonlyzun/Desktop/GoIT/goit-react-hw-02-feedback/src/components/App.jsx\";\nimport React, { Component } from 'react';\nimport FeedBackOptions from './FeedBack/FeedBackOptions';\nimport Section from './Section/Section';\nimport Statistic from './Statistics/Statistic';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    };\n\n    this.onLeaveFeedback = e => {\n      const count = e.target.name;\n      this.setState(prevState => ({\n        [count]: prevState[count] + 1\n      }));\n    };\n  }\n\n  render() {\n    const {\n      good,\n      neutral,\n      bad\n    } = this.state;\n    const isFeedback = good || bad || neutral;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Section, {\n        title: \"Please leave feedback\",\n        children: [/*#__PURE__*/_jsxDEV(FeedBackOptions, {\n          options: Object.keys(this.state),\n          onLeaveFeedback: this.onLeaveFeedback\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), isFeedback ? /*#__PURE__*/_jsxDEV(Statistic, {\n          good: good,\n          neutral: neutral,\n          bad: bad // total={totalFids}\n          // positivePercentage={positivePercentage}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this) : \"No feedback given\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}","map":{"version":3,"sources":["/Users/antonlyzun/Desktop/GoIT/goit-react-hw-02-feedback/src/components/App.jsx"],"names":["React","Component","FeedBackOptions","Section","Statistic","App","state","good","neutral","bad","onLeaveFeedback","e","count","target","name","setState","prevState","render","isFeedback","Object","keys"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,eAAP,MAA4B,4BAA5B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;;AAEA,OAAO,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACjCK,KADiC,GACzB;AACNC,MAAAA,IAAI,EAAE,CADA;AAENC,MAAAA,OAAO,EAAE,CAFH;AAGNC,MAAAA,GAAG,EAAE;AAHC,KADyB;;AAAA,SAOjCC,eAPiC,GAOdC,CAAD,IAAO;AACvB,YAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASC,IAAvB;AACA,WAAKC,QAAL,CAAcC,SAAS,KAAK;AAC1B,SAACJ,KAAD,GAASI,SAAS,CAACJ,KAAD,CAAT,GAAmB;AADF,OAAL,CAAvB;AAGH,KAZkC;AAAA;;AAcjCK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEV,MAAAA,IAAF;AAAQC,MAAAA,OAAR;AAAiBC,MAAAA;AAAjB,QAAyB,KAAKH,KAApC;AACA,UAAMY,UAAU,GAAGX,IAAI,IAAIE,GAAR,IAAeD,OAAlC;AAEA,wBACD;AAAA,6BACK,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,uBAAf;AAAA,gCACE,QAAC,eAAD;AAAiB,UAAA,OAAO,EAAEW,MAAM,CAACC,IAAP,CAAY,KAAKd,KAAjB,CAA1B;AAAmD,UAAA,eAAe,EAAE,KAAKI;AAAzE;AAAA;AAAA;AAAA;AAAA,gBADF,EAKGQ,UAAU,gBACL,QAAC,SAAD;AACE,UAAA,IAAI,EAAEX,IADR;AAEE,UAAA,OAAO,EAAEC,OAFX;AAGE,UAAA,GAAG,EAAEC,GAHP,CAIE;AACA;;AALF;AAAA;AAAA;AAAA;AAAA,gBADK,GAQL,mBAbR;AAAA;AAAA;AAAA;AAAA;AAAA;AADL,qBADC;AAsBD;;AAxCgC","sourcesContent":["import React, { Component } from 'react';\n\nimport FeedBackOptions from './FeedBack/FeedBackOptions';\nimport Section from './Section/Section'\nimport Statistic from './Statistics/Statistic';\n\nexport class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  }\n\n  onLeaveFeedback = (e) => {\n    const count = e.target.name;\n    this.setState(prevState => ({\n      [count]: prevState[count] + 1\n    }))\n}\n  \n  render() {\n    const { good, neutral, bad } = this.state;\n    const isFeedback = good || bad || neutral    \n    \n    return (\n\t\t\t<>\n        <Section title=\"Please leave feedback\">\n          <FeedBackOptions options={Object.keys(this.state)} onLeaveFeedback={this.onLeaveFeedback} />\n        {/* <button>{good}</button>\n        <button>{neutral}</button>\n          <button>{bad}</button> */}\n          {isFeedback\n              ? <Statistic\n                  good={good}\n                  neutral={neutral}\n                  bad={bad}\n                  // total={totalFids}\n                  // positivePercentage={positivePercentage}\n              />\n              : \"No feedback given\"\n            }\n\n\n          </Section>\n\t\t\t</>\n\t\t);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}